{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2CAA2C,IAAI,WAAW,WAAW;AACrE,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI;AAC/B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6DAA6D,QAAQ;AACrE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,YAAY;AACxE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAW;AACnC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qBAAqB;AACrF;AACA,iBAAiB;AACjB;AACA,gEAAgE,qBAAqB;AACrF;AACA,iBAAiB;AACjB,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qBAAqB;AACrF;AACA,iBAAiB;AACjB;AACA,gEAAgE,qBAAqB;AACrF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM;;;;;;UCxKrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNsC;AACtC;AACA;AACA,IAAI,2DAAM;AACV,CAAC","sources":["webpack://localhost/./js/modules/services/services.js","webpack://localhost/./js/modules/slider.js","webpack://localhost/webpack/bootstrap","webpack://localhost/webpack/runtime/define property getters","webpack://localhost/webpack/runtime/hasOwnProperty shorthand","webpack://localhost/webpack/runtime/make namespace object","webpack://localhost/./js/script.js"],"sourcesContent":["const postData = async(url, data) => {\r\n    let res = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n    return await res.json();\r\n};\r\nconst getResourse = async (url) => {\r\n    let res = await fetch(url);\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status ${res.status}`);\r\n    } else {\r\n        // console.log(res.json());\r\n        return await res.json();\r\n    }\r\n};\r\nexport {postData, getResourse};","// slideSource: 'url' - if you want get url list from remote server, for test you can use json-server db.json\r\n//              'array' - if you want get url list from local array slideUrl\r\n\r\nimport {getResourse} from './services/services';\r\nfunction slider(slideSource){\r\n    // Slder\r\n    // slideSource\r\n    const slideUrl = [\r\n        \"img/slider/food-12.jpg\",\r\n        \"img/slider/olive-oil.jpg\",\r\n        \"img/slider/paprika.jpg\",\r\n        \"img/slider/pepper.jpg\"\r\n      ];\r\n    class Slider {\r\n        constructor(img, curent) {\r\n            this.img = img;\r\n            this.current = curent;\r\n            this.ofset = 0;\r\n            this.width = 0;\r\n        }\r\n        prevSlider() {\r\n            this.current = this.current-1;\r\n            if (this.current < 0) {\r\n                this.current = this.img.length-1;\r\n            }\r\n            this.changeCurrent();\r\n            if (this.ofset<=0) {\r\n                this.ofset = this.width*(this.img.length-1);\r\n            } else {\r\n                this.ofset = this.ofset - this.width;\r\n            }\r\n            return this.ofset;\r\n        }\r\n        nextSlider() {\r\n            this.current = this.current+1;\r\n            if (this.current > this.img.length-1) {\r\n                this.current = 0;\r\n            }\r\n            this.changeCurrent();\r\n            if (this.ofset < this.width*(this.img.length-1)){\r\n                this.ofset = this.ofset + this.width;\r\n            } else {\r\n                this.ofset = 0;\r\n            }\r\n            \r\n            return this.ofset;\r\n        }\r\n        changeCurrent() {\r\n            var currentSpan = document.querySelector(\"#current\");\r\n            var currentHTML = this.current + 1;\r\n            if (currentHTML < 10) {\r\n                currentHTML = '0' + currentHTML;\r\n            } \r\n            currentSpan.innerHTML = currentHTML;\r\n            currentHTML='';\r\n        }\r\n        getOfsetById(id){\r\n            this.current = +id;\r\n            this.ofset = id*this.width;\r\n            this.changeCurrent();\r\n            return this.ofset;\r\n        }\r\n        changeActivDot (){\r\n            const dots = document.querySelectorAll('.dot');\r\n            dots.forEach((dot, index) => {\r\n                if (this.current == index){\r\n                    dot.style.opacity = 1;\r\n                } else {\r\n                    dot.style.opacity = 0.5;\r\n                }\r\n            });\r\n        }\r\n        render() {\r\n            const sliderWraper = document.querySelector(\".offer__slider-wrapper\"),\r\n                  sliderInner = sliderWraper.querySelector(\".slide__inner\"),\r\n                  width = window.getComputedStyle(sliderInner).width,\r\n                  offerSlider = document.querySelector('.offer__slider'),\r\n                  carouselIndicators = document.querySelector('.carousel__indicators');\r\n                  \r\n            offerSlider.style.position = 'relative';\r\n            sliderInner.innerHTML = '';      \r\n            sliderInner.style.display = 'Flex';\r\n            sliderInner.style.transition = '0.5s all';\r\n\r\n            var ex = /\\D\\D/;\r\n            var intWidth = +width.replace(ex,'');\r\n            this.width = intWidth;\r\n\r\n            sliderInner.style.width = intWidth*this.img.length +'px';\r\n            sliderWraper.style.overflow = 'hidden';\r\n            this.changeCurrent();\r\n\r\n            this.img.forEach(img => {\r\n                const element = document.createElement('div');\r\n                element.innerHTML = `\r\n                <div class=\"offer__slide\">\r\n                <img src=${img}>\r\n                </div>\r\n                `;\r\n                element.style.width = width;\r\n                sliderInner.append(element);\r\n            });\r\n            let newSpan = '';\r\n            this.img.forEach((img, counter) =>{\r\n                newSpan += `<span class=\"dot\" id=\"sliderDot${counter}\"></span>`;\r\n            });\r\n            carouselIndicators.innerHTML = newSpan;\r\n            document.getElementById(\"sliderDot0\").style.opacity = 1;\r\n            carouselIndicators.addEventListener('click', e =>{\r\n                var ex = /\\D*/;\r\n                const id = e.target.id.replace(ex, '');\r\n                this.getOfsetById(id);\r\n                sliderInner.style.transform = `translateX(${-this.ofset}px)`;\r\n                this.changeActivDot();\r\n            });\r\n        }\r\n    }\r\n    const renderSlider = ()=> {\r\n        const totalSpan = document.querySelector(\"#total\"),\r\n              sliderInner = document.querySelector(\".slide__inner\"),\r\n              pervSlider = document.querySelector('.offer__slider-prev'),\r\n              nextSlider = document.querySelector('.offer__slider-next');\r\n\r\n        if (slideSource === 'url') {\r\n            const res = getResourse('http://localhost:3000/sider ').then((data) =>{\r\n                var total = 0;\r\n                if (data.length< 10) {\r\n                    total = '0' + data.length;\r\n                } else {\r\n                    total = data.length;\r\n                }\r\n                totalSpan.innerHTML = total;\r\n    \r\n                const slider = new Slider(data, 0);\r\n                slider.render();\r\n                pervSlider.addEventListener('click', ()=>{\r\n                    sliderInner.style.transform = `translateX(${-slider.prevSlider()}px)`;\r\n                    slider.changeActivDot();\r\n                });\r\n                nextSlider.addEventListener('click', ()=>{\r\n                    sliderInner.style.transform = `translateX(${-slider.nextSlider()}px)`;\r\n                    slider.changeActivDot();\r\n                });\r\n            });\r\n        } else if (slideSource === 'array'){\r\n            var total = 0;\r\n                if (slideUrl.length< 10) {\r\n                    total = '0' + slideUrl.length;\r\n                } else {\r\n                    total = slideUrl.length;\r\n                }\r\n                totalSpan.innerHTML = total;\r\n    \r\n                const slider = new Slider(slideUrl, 0);\r\n                slider.render();\r\n                pervSlider.addEventListener('click', ()=>{\r\n                    sliderInner.style.transform = `translateX(${-slider.prevSlider()}px)`;\r\n                    slider.changeActivDot();\r\n                });\r\n                nextSlider.addEventListener('click', ()=>{\r\n                    sliderInner.style.transform = `translateX(${-slider.nextSlider()}px)`;\r\n                    slider.changeActivDot();\r\n                });\r\n        }\r\n    };\r\n    renderSlider();\r\n// Slder\r\n}\r\nexport default slider;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import slider from './modules/slider';\r\n\r\nwindow.addEventListener('DOMContentLoaded', function() {\r\n    slider('array');\r\n});\r\n"],"names":[],"sourceRoot":""}